name: publish
on:
  release:
  push:
    branches: [main]
    tags:
env:
  NIXPKGS_ALLOW_UNFREE: 1
jobs:
  test:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2.3.4
    - uses: cachix/install-nix-action@v12
    - uses: cachix/cachix-action@v8
      with:
        name: note-maps
        authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
    - run: nix-shell --run "make -e download lint test DEBUG=1"
  build-apk:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2.3.4
    - uses: cachix/install-nix-action@v12
    - uses: cachix/cachix-action@v8
      with:
        name: note-maps
        authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
    - run: nix-shell --run "yes | flutter doctor --android-licenses ; make -e download build DEBUG= FLUTTER_BUILD=apk"
    - uses: actions/upload-artifact@v2
      with:
        name: apk
        path: ./out/flutter/nm_app/app/outputs/apk/release/*
  build-web:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2.3.4
    - uses: cachix/install-nix-action@v12
    - uses: cachix/cachix-action@v8
      with:
        name: note-maps
        authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
    - run: nix-shell --run "make -e download build DEBUG= FLUTTER_BUILD=web"
    - uses: actions/upload-artifact@v2
      with:
        name: web
        path: ./out/flutter/nm_app/web/
  publish-to-firebase:
    needs:
    - test
    - build-web
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@master
    - uses: actions/download-artifact@master
      with:
        name: web
        path: ./out/firebase
    - run: cd build/firebase ; ln -s ../../out/firebase
    - name: Deploy to Firebase
      uses: w9jds/firebase-action@master
      with:
        args: deploy --only hosting
      env:
        FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        PROJECT_ID: note-maps
        PROJECT_PATH: ./build/firebase/
