#!/bin/bash
#
# Copyright 2020-2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

set -e

if git rev-parse --verify HEAD >/dev/null 2>&1
then
	against=HEAD
else
	# Initial commit: diff against an empty tree object
	against=$(git hash-object -t tree /dev/null)
fi

# Redirect output to stderr.
exec 1>&2

# If there are whitespace errors, print the offending file names and fail.
git diff-index --check --cached $against -- || ( echo "found whitespace errors" ; exit 1 )

make -e --dry-run --always-make lint format test build > /dev/null || ( echo "commit blocked: Makefile is incoherent" ; false )
make -ej lint > /dev/null || ( echo "commit blocked: 'make lint' failed" ; false )

# Find relevant packages.
#gopkgs="$(go list ./... | grep -v 'vendor|third_party')"
#dartpkgs="$(ls -d ./dart/* )"

# Fail if automatic formatting would change anything
#[[ "$(type -P gofmt)" ]] && gofmt -d . 2>&1 || ( echo "gofmt would change some files" ; exit 1 )
#[[ "$(type -P flutter)" ]] && flutter format --dry-run --set-exit-if-changed ./packages > /dev/null || ( echo "flutter format would change some files" ; exit 1 )

# Run tests, but quickly.
#go test -timeout 30s -short ${gopkgs} || ( echo "go test failed" ; exit 1 )
